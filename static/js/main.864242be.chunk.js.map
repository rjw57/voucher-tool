{"version":3,"sources":["components/Debugger.tsx","containers/page.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["formatTimestamp","timestamp","moment","utc","format","PayloadDescription","_ref","jti","val","aud","iss","crsid","iat","nbf","exp","react_default","a","createElement","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","ISSUER_MAP","description","verifyAndDecodeVoucher","voucher","errors","unverifiedDecoding","jwt","complete","push","isValid","header","issuer","concat","audience","VALID_AUDIENCES","has","payload","key","algorithms","error","message","isNaN","Number","Set","ifs-test-iuph8yaith","ifs-live-eibah7hah8","Debugger","_useState","useState","_useState2","Object","slicedToArray","setVoucher","_verifyAndDecodeVouch","Fragment","TextField_default","id","label","placeholder","autoFocus","InputLabelProps","shrink","multiline","rowsMax","margin","variant","fullWidth","value","onChange","event","target","Typography_default","gutterBottom","length","map","index","Debugger_PayloadDescription","Page","withStyles","theme","createStyles","appBar","position","layout","defineProperty","width","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","buttons","display","justifyContent","button","classes","CssBaseline_default","AppBar_default","color","className","Toolbar_default","noWrap","Paper_default","component","components_Debugger","App","page","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.864242be.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport ValidIcon from '@material-ui/icons/CheckCircle';\nimport InvalidIcon from '@material-ui/icons/Error';\n\nimport * as jwt from 'jsonwebtoken';\nimport * as moment from 'moment';\n\nexport const Debugger = () => {\n  const [voucher, setVoucher] = useState('');\n  const { header, payload, isValid, errors } = verifyAndDecodeVoucher(voucher);\n\n  return <>\n    <TextField\n      id=\"outlined-multiline-flexible\"\n      label=\"Voucher\"\n      placeholder=\"Enter voucher\"\n      autoFocus={true}\n      InputLabelProps={{shrink: true}}\n      multiline\n      rowsMax=\"6\"\n      margin=\"normal\"\n      variant=\"outlined\"\n      fullWidth={true}\n      value={voucher}\n      onChange={(event) => setVoucher(event.target.value)}\n    />\n    {\n      isValid && <>\n        <Typography variant=\"h6\">\n          Voucher is valid\n        </Typography>\n      </>\n    }\n    {\n      !isValid && <>\n        <Typography variant=\"h6\" gutterBottom={true}>\n          Voucher is invalid\n        </Typography>\n        {\n          errors && (errors.length > 0) &&\n          errors.map((error, index) => <Typography key={index}>\n            { error }\n          </Typography>)\n        }\n      </>\n    }\n    { isValid && payload && <PayloadDescription {...payload} /> }\n  </>;\n};\n\ninterface IPayload {\n  jti: string;\n  val: string;\n  aud: string;\n  iss: string;\n\n  crsid: string;\n\n  iat?: number;\n  nbf?: number;\n  exp?: number;\n\n  [key: string]: any;\n};\n\ninterface IPayloadDescriptionProps extends IPayload { };\n\nconst formatTimestamp = (timestamp: number) => moment.unix(timestamp).utc().format('LLL');\n\nconst PayloadDescription = (\n  { jti, val, aud, iss, crsid, iat, nbf, exp }: IPayloadDescriptionProps) => (\n<Table>\n  <TableHead>\n    <TableRow>\n      <TableCell>Claim</TableCell>\n      <TableCell>Value</TableCell>\n    </TableRow>\n  </TableHead>\n  <TableBody>\n    <TableRow>\n      <TableCell>Unique id</TableCell>\n      <TableCell>{ jti }</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>Value</TableCell>\n      <TableCell>{ val }</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>User</TableCell>\n      <TableCell>{ crsid }</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>Issuer</TableCell>\n      <TableCell>{ ISSUER_MAP[iss].description }</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>Intended use</TableCell>\n      <TableCell>{ aud }</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>Issued at</TableCell>\n      <TableCell>{ iat ? formatTimestamp(iat) : '\\u2014' }</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>Invalid before</TableCell>\n      <TableCell>{ nbf ? formatTimestamp(nbf) : '\\u2014' }</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>Invalid after</TableCell>\n      <TableCell>{ exp ? formatTimestamp(exp) : '\\u2014' }</TableCell>\n    </TableRow>\n  </TableBody>\n</Table>);\n\ninterface IVerifyAndDecodeResult {\n  header?: { [key: string]: any; }\n  payload?: IPayload;\n\n  isValid: Boolean;\n\n  errors?: string[];\n};\n\nconst verifyAndDecodeVoucher = (voucher: string): IVerifyAndDecodeResult => {\n  const errors: string[] = [];\n\n  const unverifiedDecoding = jwt.decode(voucher, { complete: true });\n  if(unverifiedDecoding === null) {\n    errors.push('Voucher cannot be decoded.');\n    return { isValid: false, errors };\n  }\n\n  const { header} = unverifiedDecoding as { header: { [key: string]: any } };\n  if(!header || !header.iss) {\n    errors.push('Header lacks \"iss\" claim');\n    return { isValid: false, header, errors };\n  }\n\n  const issuer = ISSUER_MAP[header.iss];\n  if(!issuer) {\n    errors.push(`Voucher issuer \"${header.iss}\" is unknown`);\n    return { isValid: false, header, errors };\n  }\n\n  if(!header || !header.aud) {\n    errors.push('Header lacks \"aud\" claim');\n    return { isValid: false, header, errors };\n  }\n  const audience = header.aud;\n\n  if(!VALID_AUDIENCES.has(audience)) {\n    errors.push(`Audience \"${audience}\" is unknown`);\n    return { isValid: false, header, errors };\n  }\n\n  let payload = null;\n  try {\n    payload = jwt.verify(voucher, issuer.key, {\n      algorithms:['ES256'], audience: audience, issuer: header.iss,\n    }) as { [key: string]: any };\n    if(!payload) {\n      errors.push('Voucher has empty payload');\n      return { isValid: false, header, errors };\n    }\n  } catch(error) {\n    errors.push(`Voucher could not be verified: ${error.message}`);\n    return { isValid: false, header, errors };\n  }\n\n  if(!payload.jti) {\n    errors.push('Payload lacks \"jti\" claim');\n    return { isValid: false, header, errors };\n  }\n\n  if(!payload.val) {\n    errors.push('Payload lacks \"val\" claim');\n    return { isValid: false, header, errors };\n  }\n\n  if(isNaN(Number(payload.val))) {\n    errors.push('\"val\" claim could not be parsed as a number');\n    return { isValid: false, header, errors };\n  }\n\n  return { isValid: true, header, payload: payload as IPayload, errors };\n};\n\ninterface IIssuer {\n  description?: string;\n  key: string;\n};\n\nconst VALID_AUDIENCES = new Set(['ssgw', 'ssge-dev', 'ssgw-test']);\n\nconst ISSUER_MAP: { [issuerId: string]: IIssuer } = {\n  \"ifs-test-iuph8yaith\": {\n    description: 'IFS Test',\n    key: `-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAER/JQFfpKZinH3btYjuoYTZ9dqodt\nEmHWiOCaVXVg9X2xacp7DKMJDobv9vQhXHuBo+QkRnwfcgZ0mMgXL7QxDw==\n-----END PUBLIC KEY-----`,\n  },\n  \"ifs-live-eibah7hah8\": {\n    description: 'IFS Production',\n    key: `-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEbFSlXcqD9S4yBeV9UUPajH13Qo5j\niNQivxKBEUCX/fQ18XKhV7stCPTVX7lExw7RBJ3B/f42+S55jIrXlfqk9g==\n-----END PUBLIC KEY-----`,\n  },\n};\n\nexport default Debugger;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport Debugger from '../components/Debugger';\n\nconst styles = (theme: Theme) => createStyles({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n}\n\nexport const Page = withStyles(styles)(({ classes }: IProps) => (\n  <>\n    <CssBaseline />\n    <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          Voucher verifier\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\" gutterBottom={true}>\n          SSGW Voucher Debugger\n        </Typography>\n        <Typography component=\"p\" gutterBottom={true}>\n          This site helps you debug vouchers for the self service gateway.\n        </Typography>\n        <Debugger />\n      </Paper>\n    </main>\n  </>\n));\n\nexport default Page;\n","import React, { Component } from 'react';\n\nimport Page from './containers/page';\n\nclass App extends Component {\n  render() { return <Page />; }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}